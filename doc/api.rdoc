1) Get oauth applicationId and secret from below url to invoke next api's
  http://root-url/oauth/applications

2) Get access_token to communicate through server(app)
  Method: POST
  URL: http://root-url/api/clients/token
  Body: {
      "grant_type":"client_credentials",
      "client_id":"< xxxx >",
      "client_secret":"< xxxx >"
  }

  Response: {
    "access_token": "<newly generated access_token to invoke next API's>",
     "token_type": "bearer",
     "expires_in": 86313600,
     "scope": "public",
     "created_at": 1465907017
  }


3) Authorize App with ClientId and ClientSecret
   Method: POST
   URL: http://root-url/api/v1/authorize_app
   Headers: { Authorization: "Bearer <access_token>"}
   Body: { client_id: <dev applition's id>, client_secret_token: <dev application's secret> }

   desc:
     i) after successfully finding an app with above ,  doorkeeper_token resource is associated to application's owner
    ii) a new document is saved in app_access_tokens along with application_id and access_token to access the application
        via access_token for further calls.



4) Get Applicaiton Tour Assets
  Method: GET
  URL: http://root-url/api/v1/tour/assets
  Headers: { Authorization: "Bearer <access_token>"}

5) Get Applicaiton Permission assets
  Method: GET
  URL: http://root-url/api/v1/permission/<:name>/assets
  Headers: { Authorization: "Bearer <access_token>"}
  Required Parameter :name possible values are
    'camera', 'notifications', 'contacts', 'location'