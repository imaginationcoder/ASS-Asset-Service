= page_title('Analytics')
%section.content-header
  %h4
    Analytics
    %small= @app.name
  %ol.breadcrumb
    %li
      %a{:href => root_url}
        %i.fa.fa-dashboard
        Dashboard
    %li
      %a{href: my_apps_path} Apps
    %li
      %a{href: app_path(@app)}= @app.name
    %li.active Analytics
%section.content.app-analytics
  .row
    .col-md-3.col-xs-6
      .form-group
        %label Choose Version
        = select_tag "select_app_version", options_for_select(@app.versions.map(&:number), @version), data: {url: analytics_app_path(@app)},
                                           class: 'form-control select2 select_app_version', style: 'width: 100%;'
  .row
    .col-sx-12.text-center.text-light-blue.text-uppercase
      %h4 #{@app.name} Analytics - Tour
  .row
    .col-xs-12.col-md-6
      .box
        .box-body.no-padding
          %table.table.table-striped
            %tr
              %th Asset
              %th Version
              -#%th Progress
              %th Avg time users spent(sec)
            - @tour_templates.each_with_index do |template, index|
              %tr
                %td
                  %a{href: template_path(template)} Step #{index + 1}
                %td= @version
                -#%td
                  .progress.progress-xs
                    .progress-bar.progress-bar-danger{:style => "width: 30%"}
                %td
                  %span.badge.bg-light-blue= template.average_time_spent(@version)
    .col-xs-12.col-md-6
      .box
        .box-header.with-border
          %h3.box-title Average time users spent
          -#.box-tools.pull-right
            %button.btn.btn-box-tool{"data-widget" => "collapse", :type => "button"}
              %i.fa.fa-minus
        .box-body
          .row
            .col-xs-12
              %canvas#pieChart{:style => "height:200px"}
          .row
            .col-xs-12
              #pieChart-legend

  // permissions
  .row
    .col-sx-12.text-center.text-light-blue.text-uppercase
      %h4{style: 'font-weight: 600;'} #{@app.name} Analytics - Permissions
  .row
    .col-xs-12.col-md-6
      .box
        .box-body.no-padding
          %table.table.table-striped
            %tr
              %th Asset
              %th Version
              %th Avg time users spent(sec)
              %th Accepted
              %th Denied
            - @permission_templates.each do |template|
              %tr
                %td.text-uppercase
                  %a{href: template_path(template)}= template.permission.name
                %td= @version
                %td
                  %span.badge.bg-light-blue= template.average_time_spent(@version)
                %td
                  %span.badge.bg-green= template.permission_accepted_count(@version)
                %td
                  %span.badge.bg-red= template.permission_denied_count(@version)
    .col-xs-12.col-md-6
      .box
        .box-header.with-border
          %h3.box-title Avg time(sec) users spent
        .box-body
          .row
            .col-xs-12.chart
              %canvas#barChart{:style => "height:230px"}
          .row
            .col-xs-12
              #barChart-legend
:javascript
    $('.app-analytics .select_app_version').change(function (e){
      Turbolinks.visit($(this).data('url')+'?version='+$(this).val());
    });
    //-------------
    //- PIE CHART -
    //-------------
    // Get context with jQuery - using jQuery's .get() method.
    var pieChartCanvas = $("#pieChart").get(0).getContext("2d");
    var pieData = #{@pie_data.to_json};
    var pieOptions = {
      //Boolean - Whether we should show a stroke on each segment
      segmentShowStroke: true,
      //String - The colour of each segment stroke
      segmentStrokeColor: "#fff",
      //Number - The width of each segment stroke
      segmentStrokeWidth: 2,
      //Number - The percentage of the chart that we cut out of the middle
      percentageInnerCutout: 50, // This is 0 for Pie charts
      //Number - Amount of animation steps
      animationSteps: 100,
      //String - Animation easing effect
      animationEasing: "easeOutBounce",
      //Boolean - Whether we animate the rotation of the Doughnut
      animateRotate: true,
      //Boolean - Whether we animate scaling the Doughnut from the centre
      animateScale: false,
      //Boolean - whether to make the chart responsive to window resizing
      responsive: true,
      // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
      maintainAspectRatio: true,
      //String - A legend template
      legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"
    };
    // Create pie or douhnut chart
    // You can switch between pie and douhnut using the method below./
    var pieChart = new Chart(pieChartCanvas).Doughnut(pieData, pieOptions);
    // legendTemplate is if you want to generate an HTML legend for the chart and use somewhere else on the page
    //document.getElementById('pieChart-legend').innerHTML = pieChart.generateLegend();

    //-------------
    //- BAR CHART -
    //-------------
    var barChartCanvas = $("#barChart").get(0).getContext("2d");
    var barChart = new Chart(barChartCanvas);
    var barChartData = {
      labels: #{@bar_labels.to_json},
      datasets: [
        {
          label: "Digital Goods",
          fillColor: "rgba(60,141,188,0.9)",
          strokeColor: "rgba(60,141,188,0.8)",
          pointColor: "#3b8bba",
          pointStrokeColor: "rgba(60,141,188,1)",
          pointHighlightFill: "#fff",
          pointHighlightStroke: "rgba(60,141,188,1)",
          data: #{@bar_data.to_json}
        }
      ]
    };
    barChartData.datasets[0].fillColor = "#00a65a";
    barChartData.datasets[0].strokeColor = "#00a65a";
    barChartData.datasets[0].pointColor = "#00a65a";
    var barChartOptions = {
      //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
      scaleBeginAtZero: true,
      //Boolean - Whether grid lines are shown across the chart
      scaleShowGridLines: true,
      //String - Colour of the grid lines
      scaleGridLineColor: "rgba(0,0,0,.05)",
      //Number - Width of the grid lines
      scaleGridLineWidth: 1,
      //Boolean - Whether to show horizontal lines (except X axis)
      scaleShowHorizontalLines: true,
      //Boolean - Whether to show vertical lines (except Y axis)
      scaleShowVerticalLines: true,
      //Boolean - If there is a stroke on each bar
      barShowStroke: true,
      //Number - Pixel width of the bar stroke
      barStrokeWidth: 2,
      //Number - Spacing between each of the X value sets
      barValueSpacing: 5,
      //Number - Spacing between data sets within X values
      barDatasetSpacing: 1,
      //String - A legend template
      legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].fillColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
      //Boolean - whether to make the chart responsive
      responsive: true,
      maintainAspectRatio: true
    };

    barChartOptions.datasetFill = false;
    barChart.Bar(barChartData, barChartOptions);